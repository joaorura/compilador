0001  void shellSort(int[]* vet)
[0001, 0001] (0006, VOID                ) {void}
[0001, 0006] (0041, IDENTIFI            ) {shellSort}
[0001, 0015] (0023, A_PARENT            ) {(}
[0001, 0016] (0003, INT                 ) {int}
[0001, 0019] (0046, ARR_UNDM            ) {[]}
[0001, 0021] (0044, DEREF_MULT          ) {*}
[0001, 0023] (0041, IDENTIFI            ) {vet}
[0001, 0026] (0024, F_PARENT            ) {)}


0002  {
[0002, 0001] (0021, A_CHAVE             ) {{}


0003      int i, j, value;
[0003, 0005] (0003, INT                 ) {int}
[0003, 0009] (0041, IDENTIFI            ) {i}
[0003, 0010] (0019, VIRGULA             ) {,}
[0003, 0012] (0041, IDENTIFI            ) {j}
[0003, 0013] (0019, VIRGULA             ) {,}
[0003, 0015] (0041, IDENTIFI            ) {value}
[0003, 0020] (0020, P_VIRG              ) {;}


0004      int size = len(&vet);
[0004, 0005] (0003, INT                 ) {int}
[0004, 0009] (0041, IDENTIFI            ) {size}
[0004, 0014] (0035, OP_IGUAL            ) {=}
[0004, 0016] (0041, IDENTIFI            ) {len}
[0004, 0019] (0023, A_PARENT            ) {(}
[0004, 0020] (0045, OP_REF              ) {&}
[0004, 0021] (0041, IDENTIFI            ) {vet}
[0004, 0024] (0024, F_PARENT            ) {)}
[0004, 0025] (0020, P_VIRG              ) {;}


0005      int h = 1;
[0005, 0005] (0003, INT                 ) {int}
[0005, 0009] (0041, IDENTIFI            ) {h}
[0005, 0011] (0035, OP_IGUAL            ) {=}
[0005, 0013] (0016, L_INT               ) {1}
[0005, 0014] (0020, P_VIRG              ) {;}


0006


0007      while (h < size) {
[0007, 0005] (0025, WHILE               ) {while}
[0007, 0011] (0023, A_PARENT            ) {(}
[0007, 0012] (0041, IDENTIFI            ) {h}
[0007, 0014] (0032, OP_MENOR            ) {<}
[0007, 0016] (0041, IDENTIFI            ) {size}
[0007, 0020] (0024, F_PARENT            ) {)}
[0007, 0022] (0021, A_CHAVE             ) {{}


0008          h = 3 * h + 1;
[0008, 0009] (0041, IDENTIFI            ) {h}
[0008, 0011] (0035, OP_IGUAL            ) {=}
[0008, 0013] (0016, L_INT               ) {3}
[0008, 0015] (0044, DEREF_MULT          ) {*}
[0008, 0017] (0041, IDENTIFI            ) {h}
[0008, 0019] (0036, OP_ADIC             ) {+}
[0008, 0021] (0016, L_INT               ) {1}
[0008, 0022] (0020, P_VIRG              ) {;}


0009      }
[0009, 0005] (0022, F_CHAVE             ) {}}


0010


0011      while (h > 0) {
[0011, 0005] (0025, WHILE               ) {while}
[0011, 0011] (0023, A_PARENT            ) {(}
[0011, 0012] (0041, IDENTIFI            ) {h}
[0011, 0014] (0031, OP_MAIOR            ) {>}
[0011, 0016] (0016, L_INT               ) {0}
[0011, 0017] (0024, F_PARENT            ) {)}
[0011, 0019] (0021, A_CHAVE             ) {{}


0012          for(i : (h, size, 1) {
[0012, 0009] (0027, FOR                 ) {for}
[0012, 0012] (0023, A_PARENT            ) {(}
[0012, 0013] (0041, IDENTIFI            ) {i}
[0012, 0015] (0042, DOIS_PONT           ) {:}
[0012, 0017] (0023, A_PARENT            ) {(}
[0012, 0018] (0041, IDENTIFI            ) {h}
[0012, 0019] (0019, VIRGULA             ) {,}
[0012, 0021] (0041, IDENTIFI            ) {size}
[0012, 0025] (0019, VIRGULA             ) {,}
[0012, 0027] (0016, L_INT               ) {1}
[0012, 0028] (0024, F_PARENT            ) {)}
[0012, 0030] (0021, A_CHAVE             ) {{}


0013              value = vet[i];
[0013, 0013] (0041, IDENTIFI            ) {value}
[0013, 0019] (0035, OP_IGUAL            ) {=}
[0013, 0021] (0041, IDENTIFI            ) {vet}
[0013, 0024] (0008, INDICE              ) {[i]}
[0013, 0027] (0020, P_VIRG              ) {;}


0014              j = i;
[0014, 0013] (0041, IDENTIFI            ) {j}
[0014, 0015] (0035, OP_IGUAL            ) {=}
[0014, 0017] (0041, IDENTIFI            ) {i}
[0014, 0018] (0020, P_VIRG              ) {;}


0015              while (j > h-1 && value <= vet[j - h]) {
[0015, 0013] (0025, WHILE               ) {while}
[0015, 0019] (0023, A_PARENT            ) {(}
[0015, 0020] (0041, IDENTIFI            ) {j}
[0015, 0022] (0031, OP_MAIOR            ) {>}
[0015, 0024] (0041, IDENTIFI            ) {h}
[0015, 0025] (0037, OP_SUB              ) {-}
[0015, 0026] (0016, L_INT               ) {1}
[0015, 0028] (0030, OP_E                ) {&&}
[0015, 0031] (0041, IDENTIFI            ) {value}
[0015, 0037] (0034, OP_ME_IG            ) {<=}
[0015, 0040] (0041, IDENTIFI            ) {vet}
[0015, 0043] (0043, DESCONHECI          ) {[j}
[0015, 0046] (0037, OP_SUB              ) {-}
[0015, 0048] (0041, IDENTIFI            ) {h}
[0015, 0049] (0043, DESCONHECI          ) {])}
[0015, 0052] (0021, A_CHAVE             ) {{}


0016                  vet[j] = vet[j - h];
[0016, 0017] (0041, IDENTIFI            ) {vet}
[0016, 0020] (0008, INDICE              ) {[j]}
[0016, 0024] (0035, OP_IGUAL            ) {=}
[0016, 0026] (0041, IDENTIFI            ) {vet}
[0016, 0029] (0043, DESCONHECI          ) {[j}
[0016, 0032] (0037, OP_SUB              ) {-}
[0016, 0034] (0041, IDENTIFI            ) {h}
[0016, 0035] (0043, DESCONHECI          ) {];}


0017                  j = j - h;
[0017, 0017] (0041, IDENTIFI            ) {j}
[0017, 0019] (0035, OP_IGUAL            ) {=}
[0017, 0021] (0041, IDENTIFI            ) {j}
[0017, 0023] (0037, OP_SUB              ) {-}
[0017, 0025] (0041, IDENTIFI            ) {h}
[0017, 0026] (0020, P_VIRG              ) {;}


0018              }
[0018, 0013] (0022, F_CHAVE             ) {}}


0019              vet[j] = value;
[0019, 0013] (0041, IDENTIFI            ) {vet}
[0019, 0016] (0008, INDICE              ) {[j]}
[0019, 0020] (0035, OP_IGUAL            ) {=}
[0019, 0022] (0041, IDENTIFI            ) {value}
[0019, 0027] (0020, P_VIRG              ) {;}


0020          }
[0020, 0009] (0022, F_CHAVE             ) {}}


0021          h = h/3;
[0021, 0009] (0041, IDENTIFI            ) {h}
[0021, 0011] (0035, OP_IGUAL            ) {=}
[0021, 0013] (0041, IDENTIFI            ) {h}
[0021, 0014] (0038, OP_DIV              ) {/}
[0021, 0015] (0016, L_INT               ) {3}
[0021, 0016] (0020, P_VIRG              ) {;}


0022      }
[0022, 0005] (0022, F_CHAVE             ) {}}


0023  }
[0023, 0001] (0022, F_CHAVE             ) {}}


0024


0025  int main()
[0025, 0001] (0003, INT                 ) {int}
[0025, 0005] (0009, MAIN                ) {main}
[0025, 0009] (0023, A_PARENT            ) {(}
[0025, 0010] (0024, F_PARENT            ) {)}


0026  {
[0026, 0001] (0021, A_CHAVE             ) {{}


0027      int size;
[0027, 0005] (0003, INT                 ) {int}
[0027, 0009] (0041, IDENTIFI            ) {size}
[0027, 0013] (0020, P_VIRG              ) {;}


0028      scan(size)
[0028, 0005] (0026, SCAN                ) {scan}
[0028, 0009] (0023, A_PARENT            ) {(}
[0028, 0010] (0041, IDENTIFI            ) {size}
[0028, 0014] (0024, F_PARENT            ) {)}


0029


0030      int[size] array;
[0030, 0005] (0003, INT                 ) {int}
[0030, 0008] (0008, INDICE              ) {[size]}
[0030, 0015] (0041, IDENTIFI            ) {array}
[0030, 0020] (0020, P_VIRG              ) {;}


0031


0032      for(int i : (0, size, 1)) {
[0032, 0005] (0027, FOR                 ) {for}
[0032, 0008] (0023, A_PARENT            ) {(}
[0032, 0009] (0003, INT                 ) {int}
[0032, 0013] (0041, IDENTIFI            ) {i}
[0032, 0015] (0042, DOIS_PONT           ) {:}
[0032, 0017] (0023, A_PARENT            ) {(}
[0032, 0018] (0016, L_INT               ) {0}
[0032, 0019] (0019, VIRGULA             ) {,}
[0032, 0021] (0041, IDENTIFI            ) {size}
[0032, 0025] (0019, VIRGULA             ) {,}
[0032, 0027] (0016, L_INT               ) {1}
[0032, 0028] (0024, F_PARENT            ) {)}
[0032, 0029] (0024, F_PARENT            ) {)}
[0032, 0031] (0021, A_CHAVE             ) {{}


0033          scan(array[i])
[0033, 0009] (0026, SCAN                ) {scan}
[0033, 0013] (0023, A_PARENT            ) {(}
[0033, 0014] (0041, IDENTIFI            ) {array}
[0033, 0019] (0008, INDICE              ) {[i]}
[0033, 0022] (0024, F_PARENT            ) {)}


0034      }
[0034, 0005] (0022, F_CHAVE             ) {}}


0035


0036      for(int i : (0, size, 1)) {
[0036, 0005] (0027, FOR                 ) {for}
[0036, 0008] (0023, A_PARENT            ) {(}
[0036, 0009] (0003, INT                 ) {int}
[0036, 0013] (0041, IDENTIFI            ) {i}
[0036, 0015] (0042, DOIS_PONT           ) {:}
[0036, 0017] (0023, A_PARENT            ) {(}
[0036, 0018] (0016, L_INT               ) {0}
[0036, 0019] (0019, VIRGULA             ) {,}
[0036, 0021] (0041, IDENTIFI            ) {size}
[0036, 0025] (0019, VIRGULA             ) {,}
[0036, 0027] (0016, L_INT               ) {1}
[0036, 0028] (0024, F_PARENT            ) {)}
[0036, 0029] (0024, F_PARENT            ) {)}
[0036, 0031] (0021, A_CHAVE             ) {{}


0037          print(array[i])
[0037, 0009] (0013, PRINT               ) {print}
[0037, 0014] (0023, A_PARENT            ) {(}
[0037, 0015] (0041, IDENTIFI            ) {array}
[0037, 0020] (0008, INDICE              ) {[i]}
[0037, 0023] (0024, F_PARENT            ) {)}


0038      }
[0038, 0005] (0022, F_CHAVE             ) {}}


0039


0040      shellSort(&array);
[0040, 0005] (0041, IDENTIFI            ) {shellSort}
[0040, 0014] (0023, A_PARENT            ) {(}
[0040, 0015] (0045, OP_REF              ) {&}
[0040, 0016] (0041, IDENTIFI            ) {array}
[0040, 0021] (0024, F_PARENT            ) {)}
[0040, 0022] (0020, P_VIRG              ) {;}


0041


0042      for(int i : (0, size, 1)) {
[0042, 0005] (0027, FOR                 ) {for}
[0042, 0008] (0023, A_PARENT            ) {(}
[0042, 0009] (0003, INT                 ) {int}
[0042, 0013] (0041, IDENTIFI            ) {i}
[0042, 0015] (0042, DOIS_PONT           ) {:}
[0042, 0017] (0023, A_PARENT            ) {(}
[0042, 0018] (0016, L_INT               ) {0}
[0042, 0019] (0019, VIRGULA             ) {,}
[0042, 0021] (0041, IDENTIFI            ) {size}
[0042, 0025] (0019, VIRGULA             ) {,}
[0042, 0027] (0016, L_INT               ) {1}
[0042, 0028] (0024, F_PARENT            ) {)}
[0042, 0029] (0024, F_PARENT            ) {)}
[0042, 0031] (0021, A_CHAVE             ) {{}


0043          print("%i", array[i])
[0043, 0009] (0013, PRINT               ) {print}
[0043, 0014] (0023, A_PARENT            ) {(}
[0043, 0015] (0014, L_STR               ) {"%i"}
[0043, 0019] (0019, VIRGULA             ) {,}
[0043, 0021] (0041, IDENTIFI            ) {array}
[0043, 0026] (0008, INDICE              ) {[i]}
[0043, 0029] (0024, F_PARENT            ) {)}


0044      }
[0044, 0005] (0022, F_CHAVE             ) {}}


0045


0046      return 0;
[0046, 0005] (0010, RETORNO             ) {return}
[0046, 0012] (0016, L_INT               ) {0}
[0046, 0013] (0020, P_VIRG              ) {;}


0047  }
[0047, 0001] (0022, F_CHAVE             ) {}}

