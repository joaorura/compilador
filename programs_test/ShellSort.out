1  void shellSort(int[]* vet)

              [0001, 0001] (0006, VOID                ) {void}     
              [0001, 0006] (0043, IDENTIFI            ) {shellSort}
              [0001, 0015] (0024, A_PARENT            ) {(}        
              [0001, 0016] (0003, INT                 ) {int}      
              [0001, 0019] (0022, A_COLCHETE          ) {[}        
              [0001, 0020] (0023, F_COLCHETE          ) {]}        
              [0001, 0021] (0039, DEREF_MULT          ) {*}        
              [0001, 0023] (0043, IDENTIFI            ) {vet}      
              [0001, 0026] (0025, F_PARENT            ) {)}        


2  {

              [0002, 0001] (0020, A_CHAVE             ) {{}


3      int i, j, value;

              [0003, 0005] (0003, INT                 ) {int}
              [0003, 0009] (0043, IDENTIFI            ) {i}
              [0003, 0010] (0018, VIRGULA             ) {,}
              [0003, 0012] (0043, IDENTIFI            ) {j}
              [0003, 0013] (0018, VIRGULA             ) {,}
              [0003, 0015] (0043, IDENTIFI            ) {value}
              [0003, 0020] (0019, P_VIRG              ) {;}


4      int size = len(&vet);

              [0004, 0005] (0003, INT                 ) {int}
              [0004, 0009] (0043, IDENTIFI            ) {size}
              [0004, 0014] (0036, OP_IGUAL            ) {=}
              [0004, 0016] (0043, IDENTIFI            ) {len}
              [0004, 0019] (0024, A_PARENT            ) {(}
              [0004, 0020] (0045, OP_REF              ) {&}
              [0004, 0021] (0043, IDENTIFI            ) {vet}
              [0004, 0024] (0025, F_PARENT            ) {)}
              [0004, 0025] (0019, P_VIRG              ) {;}


5      int h = 1;

              [0005, 0005] (0003, INT                 ) {int}
              [0005, 0009] (0043, IDENTIFI            ) {h}
              [0005, 0011] (0036, OP_IGUAL            ) {=}
              [0005, 0013] (0015, L_INT               ) {1}
              [0005, 0014] (0019, P_VIRG              ) {;}


6



7      while (h < size) {

              [0007, 0005] (0026, WHILE               ) {while}
              [0007, 0011] (0024, A_PARENT            ) {(}
              [0007, 0012] (0043, IDENTIFI            ) {h}
              [0007, 0014] (0033, OP_MENOR            ) {<}
              [0007, 0016] (0043, IDENTIFI            ) {size}
              [0007, 0020] (0025, F_PARENT            ) {)}
              [0007, 0022] (0020, A_CHAVE             ) {{}


8          h = 3 * h + 1;

              [0008, 0009] (0043, IDENTIFI            ) {h}
              [0008, 0011] (0036, OP_IGUAL            ) {=}
              [0008, 0013] (0015, L_INT               ) {3}
              [0008, 0015] (0039, DEREF_MULT          ) {*}
              [0008, 0017] (0043, IDENTIFI            ) {h}
              [0008, 0019] (0037, OP_ADIC             ) {+}
              [0008, 0021] (0015, L_INT               ) {1}
              [0008, 0022] (0019, P_VIRG              ) {;}


9      }

              [0009, 0005] (0021, F_CHAVE             ) {}}


10



11      while (h > 0) {

              [0011, 0005] (0026, WHILE               ) {while}
              [0011, 0011] (0024, A_PARENT            ) {(}
              [0011, 0012] (0043, IDENTIFI            ) {h}
              [0011, 0014] (0032, OP_MAIOR            ) {>}
              [0011, 0016] (0015, L_INT               ) {0}
              [0011, 0017] (0025, F_PARENT            ) {)}
              [0011, 0019] (0020, A_CHAVE             ) {{}


12          for(i : (h, size, 1) {

              [0012, 0009] (0028, FOR                 ) {for}
              [0012, 0012] (0024, A_PARENT            ) {(}
              [0012, 0013] (0043, IDENTIFI            ) {i}
              [0012, 0015] (0044, DOIS_PONT           ) {:}
              [0012, 0017] (0024, A_PARENT            ) {(}
              [0012, 0018] (0043, IDENTIFI            ) {h}
              [0012, 0019] (0018, VIRGULA             ) {,}
              [0012, 0021] (0043, IDENTIFI            ) {size}
              [0012, 0025] (0018, VIRGULA             ) {,}
              [0012, 0027] (0015, L_INT               ) {1}
              [0012, 0028] (0025, F_PARENT            ) {)}
              [0012, 0030] (0020, A_CHAVE             ) {{}


13              value = vet[i];

              [0013, 0013] (0043, IDENTIFI            ) {value}
              [0013, 0019] (0036, OP_IGUAL            ) {=}
              [0013, 0021] (0043, IDENTIFI            ) {vet}
              [0013, 0024] (0022, A_COLCHETE          ) {[}
              [0013, 0025] (0043, IDENTIFI            ) {i}
              [0013, 0026] (0023, F_COLCHETE          ) {]}
              [0013, 0027] (0019, P_VIRG              ) {;}


14              j = i;

              [0014, 0013] (0043, IDENTIFI            ) {j}
              [0014, 0015] (0036, OP_IGUAL            ) {=}
              [0014, 0017] (0043, IDENTIFI            ) {i}
              [0014, 0018] (0019, P_VIRG              ) {;}


15              while (j > h-1 && value <= vet[j - h]) {

              [0015, 0013] (0026, WHILE               ) {while}
              [0015, 0019] (0024, A_PARENT            ) {(}
              [0015, 0020] (0043, IDENTIFI            ) {j}
              [0015, 0022] (0032, OP_MAIOR            ) {>}
              [0015, 0024] (0043, IDENTIFI            ) {h}
              [0015, 0025] (0038, OP_SUB              ) {-}
              [0015, 0026] (0015, L_INT               ) {1}
              [0015, 0028] (0031, OP_E                ) {&&}
              [0015, 0031] (0043, IDENTIFI            ) {value}
              [0015, 0037] (0035, OP_ME_IG            ) {<=}
              [0015, 0040] (0043, IDENTIFI            ) {vet}
              [0015, 0043] (0022, A_COLCHETE          ) {[}
              [0015, 0044] (0043, IDENTIFI            ) {j}
              [0015, 0046] (0038, OP_SUB              ) {-}
              [0015, 0048] (0043, IDENTIFI            ) {h}
              [0015, 0049] (0023, F_COLCHETE          ) {]}
              [0015, 0050] (0025, F_PARENT            ) {)}
              [0015, 0052] (0020, A_CHAVE             ) {{}


16                  vet[j] = vet[j - h];

              [0016, 0017] (0043, IDENTIFI            ) {vet}
              [0016, 0020] (0022, A_COLCHETE          ) {[}
              [0016, 0021] (0043, IDENTIFI            ) {j}
              [0016, 0022] (0023, F_COLCHETE          ) {]}
              [0016, 0024] (0036, OP_IGUAL            ) {=}
              [0016, 0026] (0043, IDENTIFI            ) {vet}
              [0016, 0029] (0022, A_COLCHETE          ) {[}
              [0016, 0030] (0043, IDENTIFI            ) {j}
              [0016, 0032] (0038, OP_SUB              ) {-}
              [0016, 0034] (0043, IDENTIFI            ) {h}
              [0016, 0035] (0023, F_COLCHETE          ) {]}
              [0016, 0036] (0019, P_VIRG              ) {;}


17                  j = j - h;

              [0017, 0017] (0043, IDENTIFI            ) {j}
              [0017, 0019] (0036, OP_IGUAL            ) {=}
              [0017, 0021] (0043, IDENTIFI            ) {j}
              [0017, 0023] (0038, OP_SUB              ) {-}
              [0017, 0025] (0043, IDENTIFI            ) {h}
              [0017, 0026] (0019, P_VIRG              ) {;}


18              }

              [0018, 0013] (0021, F_CHAVE             ) {}}


19              vet[j] = value;

              [0019, 0013] (0043, IDENTIFI            ) {vet}
              [0019, 0016] (0022, A_COLCHETE          ) {[}
              [0019, 0017] (0043, IDENTIFI            ) {j}
              [0019, 0018] (0023, F_COLCHETE          ) {]}
              [0019, 0020] (0036, OP_IGUAL            ) {=}
              [0019, 0022] (0043, IDENTIFI            ) {value}
              [0019, 0027] (0019, P_VIRG              ) {;}


20          }

              [0020, 0009] (0021, F_CHAVE             ) {}}


21          h = h/3;

              [0021, 0009] (0043, IDENTIFI            ) {h}
              [0021, 0011] (0036, OP_IGUAL            ) {=}
              [0021, 0013] (0043, IDENTIFI            ) {h}
              [0021, 0014] (0040, OP_DIV              ) {/}
              [0021, 0015] (0015, L_INT               ) {3}
              [0021, 0016] (0019, P_VIRG              ) {;}


22      }

              [0022, 0005] (0021, F_CHAVE             ) {}}


23  }

              [0023, 0001] (0021, F_CHAVE             ) {}}


24



25  int main()

              [0025, 0001] (0003, INT                 ) {int}
              [0025, 0005] (0008, MAIN                ) {main}
              [0025, 0009] (0024, A_PARENT            ) {(}
              [0025, 0010] (0025, F_PARENT            ) {)}


26  {

              [0026, 0001] (0020, A_CHAVE             ) {{}


27      int size;

              [0027, 0005] (0003, INT                 ) {int}
              [0027, 0009] (0043, IDENTIFI            ) {size}
              [0027, 0013] (0019, P_VIRG              ) {;}


28      scan(size)

              [0028, 0005] (0027, SCAN                ) {scan}
              [0028, 0009] (0024, A_PARENT            ) {(}
              [0028, 0010] (0043, IDENTIFI            ) {size}
              [0028, 0014] (0025, F_PARENT            ) {)}


29



30      int[size] array;

              [0030, 0005] (0003, INT                 ) {int}
              [0030, 0008] (0022, A_COLCHETE          ) {[}
              [0030, 0009] (0043, IDENTIFI            ) {size}
              [0030, 0013] (0023, F_COLCHETE          ) {]}
              [0030, 0015] (0043, IDENTIFI            ) {array}
              [0030, 0020] (0019, P_VIRG              ) {;}


31



32      for(int i : (0, size, 1)) {

              [0032, 0005] (0028, FOR                 ) {for}
              [0032, 0008] (0024, A_PARENT            ) {(}
              [0032, 0009] (0003, INT                 ) {int}
              [0032, 0013] (0043, IDENTIFI            ) {i}
              [0032, 0015] (0044, DOIS_PONT           ) {:}
              [0032, 0017] (0024, A_PARENT            ) {(}
              [0032, 0018] (0015, L_INT               ) {0}
              [0032, 0019] (0018, VIRGULA             ) {,}
              [0032, 0021] (0043, IDENTIFI            ) {size}
              [0032, 0025] (0018, VIRGULA             ) {,}
              [0032, 0027] (0015, L_INT               ) {1}
              [0032, 0028] (0025, F_PARENT            ) {)}
              [0032, 0029] (0025, F_PARENT            ) {)}
              [0032, 0031] (0020, A_CHAVE             ) {{}


33          scan(array[i])

              [0033, 0009] (0027, SCAN                ) {scan}
              [0033, 0013] (0024, A_PARENT            ) {(}
              [0033, 0014] (0043, IDENTIFI            ) {array}
              [0033, 0019] (0022, A_COLCHETE          ) {[}
              [0033, 0020] (0043, IDENTIFI            ) {i}
              [0033, 0021] (0023, F_COLCHETE          ) {]}
              [0033, 0022] (0025, F_PARENT            ) {)}


34      }

              [0034, 0005] (0021, F_CHAVE             ) {}}


35



36      for(int i : (0, size, 1)) {

              [0036, 0005] (0028, FOR                 ) {for}
              [0036, 0008] (0024, A_PARENT            ) {(}
              [0036, 0009] (0003, INT                 ) {int}
              [0036, 0013] (0043, IDENTIFI            ) {i}
              [0036, 0015] (0044, DOIS_PONT           ) {:}
              [0036, 0017] (0024, A_PARENT            ) {(}
              [0036, 0018] (0015, L_INT               ) {0}
              [0036, 0019] (0018, VIRGULA             ) {,}
              [0036, 0021] (0043, IDENTIFI            ) {size}
              [0036, 0025] (0018, VIRGULA             ) {,}
              [0036, 0027] (0015, L_INT               ) {1}
              [0036, 0028] (0025, F_PARENT            ) {)}
              [0036, 0029] (0025, F_PARENT            ) {)}
              [0036, 0031] (0020, A_CHAVE             ) {{}


37          print(array[i])

              [0037, 0009] (0012, PRINT               ) {print}
              [0037, 0014] (0024, A_PARENT            ) {(}
              [0037, 0015] (0043, IDENTIFI            ) {array}
              [0037, 0020] (0022, A_COLCHETE          ) {[}
              [0037, 0021] (0043, IDENTIFI            ) {i}
              [0037, 0022] (0023, F_COLCHETE          ) {]}
              [0037, 0023] (0025, F_PARENT            ) {)}


38      }

              [0038, 0005] (0021, F_CHAVE             ) {}}


39



40      shellSort(&array);

              [0040, 0005] (0043, IDENTIFI            ) {shellSort}
              [0040, 0014] (0024, A_PARENT            ) {(}
              [0040, 0015] (0045, OP_REF              ) {&}
              [0040, 0016] (0043, IDENTIFI            ) {array}
              [0040, 0021] (0025, F_PARENT            ) {)}
              [0040, 0022] (0019, P_VIRG              ) {;}


41



42      for(int i : (0, size, 1)) {

              [0042, 0005] (0028, FOR                 ) {for}
              [0042, 0008] (0024, A_PARENT            ) {(}
              [0042, 0009] (0003, INT                 ) {int}
              [0042, 0013] (0043, IDENTIFI            ) {i}
              [0042, 0015] (0044, DOIS_PONT           ) {:}
              [0042, 0017] (0024, A_PARENT            ) {(}
              [0042, 0018] (0015, L_INT               ) {0}
              [0042, 0019] (0018, VIRGULA             ) {,}
              [0042, 0021] (0043, IDENTIFI            ) {size}
              [0042, 0025] (0018, VIRGULA             ) {,}
              [0042, 0027] (0015, L_INT               ) {1}
              [0042, 0028] (0025, F_PARENT            ) {)}
              [0042, 0029] (0025, F_PARENT            ) {)}
              [0042, 0031] (0020, A_CHAVE             ) {{}


43          print("%i", array[i])

              [0043, 0009] (0012, PRINT               ) {print}
              [0043, 0014] (0024, A_PARENT            ) {(}
              [0043, 0015] (0013, L_STR               ) {"%i"}
              [0043, 0019] (0018, VIRGULA             ) {,}
              [0043, 0021] (0043, IDENTIFI            ) {array}
              [0043, 0026] (0022, A_COLCHETE          ) {[}
              [0043, 0027] (0043, IDENTIFI            ) {i}
              [0043, 0028] (0023, F_COLCHETE          ) {]}
              [0043, 0029] (0025, F_PARENT            ) {)}


44      }

              [0044, 0005] (0021, F_CHAVE             ) {}}


45



46      return 0;

              [0046, 0005] (0009, RETORNO             ) {return}
              [0046, 0012] (0015, L_INT               ) {0}
              [0046, 0013] (0019, P_VIRG              ) {;}


47  }

              [0047, 0001] (0021, F_CHAVE             ) {}}

