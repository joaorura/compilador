0001  void fib(int n)
[0001, 0001] (0006, VOID                ) {void}
[0001, 0006] (0041, IDENTIFI            ) {fib}
[0001, 0009] (0023, A_PARENT            ) {(}
[0001, 0010] (0003, INT                 ) {int}
[0001, 0014] (0041, IDENTIFI            ) {n}
[0001, 0015] (0024, F_PARENT            ) {)}


0002  {
[0002, 0001] (0021, A_CHAVE             ) {{}


0003      int fib1 = 1, fib2 = 1, soma;
[0003, 0005] (0003, INT                 ) {int}
[0003, 0009] (0041, IDENTIFI            ) {fib1}
[0003, 0014] (0035, OP_IGUAL            ) {=}
[0003, 0016] (0016, L_INT               ) {1}
[0003, 0017] (0019, VIRGULA             ) {,}
[0003, 0019] (0041, IDENTIFI            ) {fib2}
[0003, 0024] (0035, OP_IGUAL            ) {=}
[0003, 0026] (0016, L_INT               ) {1}
[0003, 0027] (0019, VIRGULA             ) {,}
[0003, 0029] (0041, IDENTIFI            ) {soma}
[0003, 0033] (0020, P_VIRG              ) {;}


0004


0005      while(fib1 < n) {
[0005, 0005] (0025, WHILE               ) {while}
[0005, 0010] (0023, A_PARENT            ) {(}
[0005, 0011] (0041, IDENTIFI            ) {fib1}
[0005, 0016] (0032, OP_MENOR            ) {<}
[0005, 0018] (0041, IDENTIFI            ) {n}
[0005, 0019] (0024, F_PARENT            ) {)}
[0005, 0021] (0021, A_CHAVE             ) {{}


0006          print(fib1);
[0006, 0009] (0013, PRINT               ) {print}
[0006, 0014] (0023, A_PARENT            ) {(}
[0006, 0015] (0041, IDENTIFI            ) {fib1}
[0006, 0019] (0024, F_PARENT            ) {)}
[0006, 0020] (0020, P_VIRG              ) {;}


0007


0008          soma = fib1 + fib2;
[0008, 0009] (0041, IDENTIFI            ) {soma}
[0008, 0014] (0035, OP_IGUAL            ) {=}
[0008, 0016] (0041, IDENTIFI            ) {fib1}
[0008, 0021] (0036, OP_ADIC             ) {+}
[0008, 0023] (0041, IDENTIFI            ) {fib2}
[0008, 0027] (0020, P_VIRG              ) {;}


0009          fib1 = fib2;
[0009, 0009] (0041, IDENTIFI            ) {fib1}
[0009, 0014] (0035, OP_IGUAL            ) {=}
[0009, 0016] (0041, IDENTIFI            ) {fib2}
[0009, 0020] (0020, P_VIRG              ) {;}


0010          fib2 = soma;
[0010, 0009] (0041, IDENTIFI            ) {fib2}
[0010, 0014] (0035, OP_IGUAL            ) {=}
[0010, 0016] (0041, IDENTIFI            ) {soma}
[0010, 0020] (0020, P_VIRG              ) {;}


0011      }
[0011, 0005] (0022, F_CHAVE             ) {}}


0012  }
[0012, 0001] (0022, F_CHAVE             ) {}}


0013


0014  int main()
[0014, 0001] (0003, INT                 ) {int}
[0014, 0005] (0009, MAIN                ) {main}
[0014, 0009] (0023, A_PARENT            ) {(}
[0014, 0010] (0024, F_PARENT            ) {)}


0015  {
[0015, 0001] (0021, A_CHAVE             ) {{}


0016      int n;
[0016, 0005] (0003, INT                 ) {int}
[0016, 0009] (0041, IDENTIFI            ) {n}
[0016, 0010] (0020, P_VIRG              ) {;}


0017      scan(n);
[0017, 0005] (0026, SCAN                ) {scan}
[0017, 0009] (0023, A_PARENT            ) {(}
[0017, 0010] (0041, IDENTIFI            ) {n}
[0017, 0011] (0024, F_PARENT            ) {)}
[0017, 0012] (0020, P_VIRG              ) {;}


0018      fib(n);
[0018, 0005] (0041, IDENTIFI            ) {fib}
[0018, 0008] (0023, A_PARENT            ) {(}
[0018, 0009] (0041, IDENTIFI            ) {n}
[0018, 0010] (0024, F_PARENT            ) {)}
[0018, 0011] (0020, P_VIRG              ) {;}


0019


0020      return 0;
[0020, 0005] (0010, RETORNO             ) {return}
[0020, 0012] (0016, L_INT               ) {0}
[0020, 0013] (0020, P_VIRG              ) {;}


0021  }
[0021, 0001] (0022, F_CHAVE             ) {}}
